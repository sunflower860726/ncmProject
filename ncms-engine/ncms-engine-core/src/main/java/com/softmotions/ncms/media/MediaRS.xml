<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softmotions.ncms.media.MediaRS">

    <cache-ref namespace="com.softmotions.ncms.db.cache.asm"/>

    <select id="selectEntityIdByPath" parameterType="map" resultType="long">
        SELECT
            id
        FROM MEDIA_ENTITY
        WHERE folder = #{folder} AND name = #{name}
    </select>

    <select id="selectEntityPathById" parameterType="map" resultType="map">
        SELECT
            folder AS "folder",
            name   AS "name"
        FROM MEDIA_ENTITY
        WHERE id = #{id}
    </select>

    <insert id="insertEntity"
            parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO MEDIA_ENTITY (
            folder, name, status, mdate,
            content_type, put_content_type, content_length,
            owner, description, tags, meta, system)
        VALUES (
            #{folder}, #{name}, #{status}, CURRENT_TIMESTAMP,
            #{content_type}, #{put_content_type}, #{content_length},
            #{owner}, #{description}, #{tags}, #{meta}, #{system})
    </insert>

    <update id="updateEntity"
            parameterType="map">
        UPDATE MEDIA_ENTITY
        SET content_type      = #{content_type},
            content_length    = #{content_length},
            owner             = #{owner},
            icon              = NULL,
            icon_content_type = NULL,
            mdate             = CURRENT_TIMESTAMP,
            meta              = #{meta},
            system            = #{system}
        WHERE id = #{id}
    </update>

    <update id="fixResourceLocation"
            parameterType="map">
        UPDATE MEDIA_ENTITY e
        SET folder = #{nfolder},
            name   = #{nname},
            mdate    = CURRENT_TIMESTAMP
        WHERE e.folder = #{folder}
              AND e.name = #{name}
    </update>

    <update id="fixFolderName"
            databaseId="DB2"
            parameterType="map">
        UPDATE MEDIA_ENTITY e
        SET e.folder = #{new_prefix} || SUBSTRING(e.folder, #{prefix_like_len}, CODEUNITS32),
            e.mdate  = CURRENT_TIMESTAMP
        WHERE e.folder LIKE #{prefix_like}
    </update>

    <update id="fixFolderName"
            databaseId="POSTGRES"
            parameterType="map">
        UPDATE MEDIA_ENTITY e
        SET folder = #{new_prefix} || SUBSTRING(e.folder FROM #{prefix_like_len}),
        mdate  = CURRENT_TIMESTAMP
        WHERE e.folder LIKE #{prefix_like}
    </update>

    <delete id="deleteFolder" parameterType="map">
        DELETE FROM MEDIA_ENTITY
        WHERE folder LIKE #{prefix_like}
    </delete>

    <delete id="deleteFile" parameterType="map">
        DELETE FROM MEDIA_ENTITY
        WHERE folder = #{folder}
              AND name = #{name}
    </delete>

    <select id="selectInFolder" parameterType="map" resultType="map">
        SELECT
            e.*
        FROM MEDIA_ENTITY AS e
        WHERE e.folder = #{folder}
        ORDER BY e.status DESC, e.name ASC
    </select>

    <select id="select"
            resultType="map"
            parameterType="map">
        SELECT
            e.id                AS "id",
            e.name              AS "name",
            e.status            AS "status",
            e.content_type      AS "content_type",
            e.content_length    AS "content_length",
            e.folder            AS "folder",
            e.owner             AS "owner",
            e.description       AS "description",
            e.tags              AS "tags"
        FROM MEDIA_ENTITY e
        <where>
            <if test="folder != null">AND e.folder LIKE #{folder}</if>
            <if test="nfolder != null">AND e.folder NOT LIKE #{nfolder}</if>
            <if test="name != null">AND LOWER(e.name) LIKE #{name}</if>
            <if test="status != null">AND e.status = #{status}</if>
            <if test="system == null">AND e.system = ${SQL.FALSE.LITERAL}</if>
        </where>
        <if test="CQ_ORDERBY">ORDER BY ${CQ_ORDERBY}</if>
        <if test="CQ_LIMIT">
            LIMIT ${CQ_LIMIT}
            <if test="CQ_OFFSET">
                OFFSET ${CQ_OFFSET}
            </if>
        </if>
    </select>

    <select id="count"
            resultType="int"
            parameterType="map">
        SELECT
        COUNT(*)
        FROM MEDIA_ENTITY e
        <where>
            <if test="folder != null">AND e.folder LIKE #{folder}</if>
            <if test="nfolder != null">AND e.folder NOT LIKE #{nfolder}</if>
            <if test="name != null">AND LOWER(e.name) LIKE #{name}</if>
            <if test="status != null">AND e.status = #{status}</if>
            <if test="system == null">AND e.system = ${SQL.FALSE.LITERAL}</if>
        </where>
    </select>

    <!-- Select count  -->
    <select id="countNotOwned" resultType="int" parameterType="map">
        SELECT
            COUNT(*)
        FROM MEDIA_ENTITY e
        WHERE
            e.folder LIKE #{folder}
            AND e.owner != #{owner}
    </select>


    <select id="selectByKeywords"
            resultType="map"
            parameterType="map">
        SELECT
            e.id                AS "id",
            e.name              AS "name",
            e.status            AS "status",
            e.content_type      AS "content_type",
            e.content_length    AS "content_length",
            e.folder            AS "folder",
            e.owner             AS "owner",
            e.description       AS "description",
            e.tags              AS "tags"
        FROM MEDIA_ENTITY e, MEDIA_ENTITY_KWORDS kw
        WHERE
        kw.entity_id = e.id
        <if test="status != null">AND e.status = #{status}</if>
        <if test="folder != null">AND e.folder LIKE #{folder}</if>
        <if test="nfolder != null">AND e.folder NOT LIKE #{nfolder}</if>
        <if test="system == null">AND e.system = ${SQL.FALSE.LITERAL}</if>
        AND
        <foreach item="k" index="index" collection="keywords"
                 open="(" separator="OR" close=")">
            kw.keyword LIKE #{k}
        </foreach>
        GROUP BY e.id, e.name, e.status, e.content_type, e.content_length, e.folder, e.owner, e.description, e.tags
        HAVING COUNT(e.id) = #{keywordsSize}
        <if test="CQ_ORDERBY">ORDER BY ${CQ_ORDERBY}</if>
        <if test="CQ_LIMIT">
            LIMIT ${CQ_LIMIT}
            <if test="CQ_OFFSET">
                OFFSET ${CQ_OFFSET}
            </if>
        </if>
    </select>

    <select id="countByKeywords"
            resultType="int"
            parameterType="map">
        SELECT COUNT(*)
        FROM (
            SELECT e.id
            FROM MEDIA_ENTITY e, MEDIA_ENTITY_KWORDS kw
            WHERE
            kw.ENTITY_ID = e.id
            <if test="status != null">AND e.status = #{status}</if>
            <if test="folder != null">AND e.folder LIKE #{folder}</if>
            <if test="nfolder != null">AND e.folder NOT LIKE #{nfolder}</if>
            <if test="system == null">AND e.system = ${SQL.FALSE.LITERAL}</if>
            AND
            <foreach item="k" index="index" collection="keywords"
                     open="(" separator="OR" close=")">
                kw.keyword LIKE #{k}
            </foreach>
            GROUP BY e.id
            HAVING COUNT(e.id) = #{keywordsSize}
        ) AS e
    </select>

    <select id="selectByPath" resultType="map" parameterType="map">
        SELECT
            e.id             AS "id",
            e.name           AS "name",
            e.status         AS "status",
            e.content_type   AS "content_type",
            e.content_length AS "content_length",
            e.folder         AS "folder",
            e.owner          AS "owner",
            e.description    AS "description"
        FROM MEDIA_ENTITY e
        WHERE
            e.folder = #{folder}
            AND e.name = #{name}
    </select>


    <select id="selectIcon" resultType="map" parameterType="map">
        SELECT
            e.id                AS "id",
            e.icon              AS "icon",
            e.content_type      AS "content_type",
            e.icon_content_type AS "icon_content_type"
        FROM MEDIA_ENTITY e
        WHERE
            e.folder = #{folder}
            AND e.name = #{name}
            AND e.status = 0
    </select>

    <select id="selectIcon2" resultType="map" parameterType="map">
        SELECT
            e.id                AS "id",
            e.folder            AS "folder",
            e.name              AS "name",
            e.icon              AS "icon",
            e.content_type      AS "content_type",
            e.icon_content_type AS "icon_content_type"
        FROM MEDIA_ENTITY e
        WHERE
            e.id = #{id}
    </select>


    <update id="updateIcon" parameterType="map">
        UPDATE MEDIA_ENTITY
        SET
            icon              = #{icon},
            icon_content_type = #{icon_content_type}
        WHERE id = #{id}
    </update>

    <update id="updateMeta" parameterType="map">
        UPDATE MEDIA_ENTITY
        <set>
            <if test="tags != null">tags = #{tags},</if>
            <if test="description != null">description = #{description},</if>
            <if test="owner != null">owner = #{owner},</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="selectMeta" resultType="map" parameterType="map">
        SELECT
            name         AS "name",
            description  AS "description",
            tags         AS "tags",
            content_type AS "content_type"
        FROM MEDIA_ENTITY
        WHERE id = #{id}
    </select>

    <delete id="dropKeywords" parameterType="map">
        DELETE FROM MEDIA_ENTITY_KWORDS
        WHERE entity_id = #{id}
    </delete>

    <insert id="insertKeyword" parameterType="map">
        INSERT INTO MEDIA_ENTITY_KWORDS
        (entity_id, keyword)
        VALUES (#{id}, #{keyword})
    </insert>

    <select id="selectResourceAttrsByPath" parameterType="map" resultType="map">
        SELECT
            id               AS "id",
            name             AS "name",
            folder           AS "folder",
            content_type     AS "content_type",
            put_content_type AS "put_content_type",
            content_length   AS "content_length",
            mdate            AS "mdate",
            owner            AS "owner",
            description      AS "description",
            tags             AS "tags",
            status           AS "status",
            system           AS "system",
            meta             AS "meta"
        FROM MEDIA_ENTITY
        WHERE folder = #{folder}
              AND name = #{name}
    </select>

    <select id="selectResourceAttrsById" parameterType="map" resultType="map">
        SELECT
            id               AS "id",
            name             AS "name",
            folder           AS "folder",
            content_type     AS "content_type",
            put_content_type AS "put_content_type",
            content_length   AS "content_length",
            mdate            AS "mdate",
            owner            AS "owner",
            description      AS "description",
            tags             AS "tags",
            status           AS "status",
            system           AS "system",
            meta             AS "meta"
        FROM MEDIA_ENTITY
        WHERE id = #{id}
    </select>


    <select id="selectAsmMediaDepsByFile" parameterType="long" resultType="map">
        SELECT
            asm.name  AS "guid",
            asm.hname AS "name",
            attr.name AS "attr_name"
        FROM ASM_MEDIA_DEPS AS d
            INNER JOIN ASM_ATTRS AS attr ON d.ATTR_ID = attr.ID
            INNER JOIN ASMS AS asm ON attr.asm_id = asm.id
        WHERE d.file_id = #{file_id}
        ORDER BY asm.name ASC, attr.name ASC
        LIMIT 10
    </select>


    <!-- Select files with same name from two different folders -->
    <select id="selectSameMediaFiles" parameterType="map" resultType="map">
        SELECT
            s.id AS "id1",
            t.id AS "id2"
        FROM MEDIA_ENTITY s, MEDIA_ENTITY t
        WHERE s.folder = #{folder1}
              AND t.folder = #{folder2}
              AND s.name = t.name
    </select>


    <insert id="insertCopyMedia" parameterType="map">
        INSERT INTO MEDIA_ENTITY (name,
                                  status,
                                  content_type,
                                  put_content_type,
                                  content_length,
                                  description,
                                  tags,
                                  icon,
                                  icon_content_type,
                                  meta,
                                  csum,
                                  system,
                                  flags,
                                  folder,
                                  owner,
                                  mdate)
            SELECT
                m.name,
                m.status,
                m.content_type,
                m.put_content_type,
                m.content_length,
                m.description,
                m.tags,
                m.icon,
                m.icon_content_type,
                m.meta,
                m.csum,
                m.system,
                m.flags,
                #{target},
                <if test="owner != null">#{owner},</if>
                <if test="owner == null">m.owner,</if>
                CURRENT_TIMESTAMP
            FROM (SELECT *
                  FROM MEDIA_ENTITY
                  WHERE folder = #{source}) AS m
    </insert>


    <insert id="insertCopyMediaKeywords" parameterType="map">
        INSERT INTO MEDIA_ENTITY_KWORDS (entity_id, keyword)
            SELECT
                m2.id,
                kw.keyword
            FROM MEDIA_ENTITY AS m1
                INNER JOIN MEDIA_ENTITY AS m2 ON m1.name = m2.name
                INNER JOIN MEDIA_ENTITY_KWORDS AS kw ON kw.entity_id = m1.id
            WHERE m1.folder = #{source}
                  AND m2.folder = #{target}
    </insert>

</mapper>